@import url("https://fonts.googleapis.com/css2?family=Silkscreen&display=swap");
@import url(./components/VolumeSelector.css);
@import url(./components/MemManager.css);
@import url(./components/TapTempoButton.css);
@import url(./components/TempoSelector.css);
@import url(./components/BeatSelector.css);
@import url(./components/BeatItem.css);
@import url(./components/BeatMonitor.css);

:root {
    --main-color: hsl(84, 100%, 59%);
    --diameter: 6rem;
    --bg: hsl(170, 1%, 25%);
    --bg-metronome: hsl(170, 0%, 15%);
    --shadow: inset 2px 2px 2px rgba(255, 255, 255, 0.2),
        inset -2px -2px 2px rgba(0, 0, 0, 0.3),
        inset 1px -1px 20px rgba(0, 0, 0, 0.3), 1px 1px 1px rgba(255, 255, 255, 0.2),
        1px 1px 4px rgba(0, 0, 0, 0.3);
    --of-shadow: inset 0px 0px 1px 1px rgba(0, 0, 0, 0.5),
        inset -1px -1px 2px 1px rgba(255, 255, 255, 0.3),
        inset 0px 0px 60px rgba(0, 0, 0, 0.5);
    --bg-grad: radial-gradient(farthest-corner at right bottom,
            rgba(0, 0, 0, 0.3) 0%,
            rgba(0, 0, 0, 0.3) 70%,
            transparent 70%),
        radial-gradient(circle, transparent 49%, rgba(0, 0, 0, 1) 100%);
    --bg-button: linear-gradient(0deg,
            rgba(0, 0, 0, 0.1) 49%,
            rgba(255, 255, 255, 0.03) 50%,
            transparent 100%);
    --bg-button-active: linear-gradient(deg,
            rgba(0, 0, 0, 0.1) 49%,
            rgba(255, 255, 255, 0.1) 50%,
            rgba(255, 255, 255, 0.005) 100%);
    --selector-gap: 0.2rem;
    color: rgba(255, 255, 255, 0.8);
    font-size: 5vh;

    @media only screen and (max-device-width: 800px) {
        --diameter: 50vw;
    }

    @media screen and (pointer: coarse) and (orientation: landscape) {
        --diameter: 35vh;
        font-size: 8vh;
    }
}

body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 0;
    background-color: var(--bg);
    height: 100vh;

    font-size: 0.25rem;
    font-family: "Silkscreen", sans-serif;
    text-shadow: 0px -1px 1px black;

    @media only screen and (max-device-width: 800px),
    only screen and (max-device-height: 800px) {
        align-items: stretch;
        background-color: #151515;
        padding: 0rem;
    }

    touch-action: none;

    &.dnd * {
        cursor: grabbing !important;
    }
}


* {
    -webkit-user-select: none;
    font-family: "Silkscreen", sans-serif;
    user-select: none;
}

h1 {
    margin: 0;
    padding: 0;
    font-size: 0.25rem;
    color: rgba(255, 255, 255, 0.5);
}

h2 {
    margin: 0;
    margin-bottom: 0.1rem;
    padding: 0;
    color: rgba(255, 255, 255, 0.5);
    font-size: 0.25rem;
    text-align: center;
}

input {
    cursor: pointer;
    border: 0;
    background-color: #505050;
    width: 1rem;
    color: white;
    font-size: 0.25rem;
    text-align: center;
}

#metronome {
    display: flex;
    position: relative;
    flex-direction: column;
    flex-wrap: nowrap;
    box-shadow: inset 0px 0px 0px 1px rgba(255, 255, 255, 0.2),
        0px 3px 5px rgba(0, 0, 0, 0.7), 5px 5px 20px 10px rgba(0, 0, 0, 0.4);
    border-radius: 0.5rem;
    background: var(--bg-grad);
    background-color: var(--bg-metronome);
    padding: 0.5rem;
    min-width: 8rem;
    overflow: hidden;

    @media only screen and (max-device-width: 800px) {
        flex: 1;
        justify-content: space-between;
        box-shadow: none;
        border-radius: 0;
        padding: 0.5rem;
        min-width: auto;
    }

    @media screen and (pointer: coarse) and (orientation: landscape) {
        flex: 1;
        justify-content: space-between;
        box-shadow: none;
        border-radius: 0;
        padding: 0.5rem;
        width: calc(100vw - 1rem);
        min-width: auto;
        height: calc(100vh - 1rem);
    }

    & header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    #metronome-inner {
        display: flex;
        flex: 1;
        flex-direction: column;
        flex-wrap: nowrap;
        gap: 0.5rem;

        @media screen and (pointer: coarse) and (orientation: landscape) {
            flex-direction: row;
        }

        #controls {
            display: flex;
            flex: 1;
            flex-direction: column;

            #buttons {
                display: flex;
                flex-direction: column;
                gap: 0.5rem;
                font-size: 0.4rem;
            }
        }
    }
}


input#tempo {
    background-color: transparent;
}

#beat-container {
    display: flex;
    gap: 0.5rem;

    &> :first-child {
        flex: 1;
    }

    #beat-subcontainer {
        .btn {
            font-size: 0.5rem !important;
        }
    }
}

body.help {
    #help {
        display: flex;
    }
}

#help {
    display: none;
    position: absolute;
    flex-direction: column;
    gap: 0.5rem;
    z-index: 200;
    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.3);
    border-radius: 0.5rem;
    background-color: rgba(0, 0, 0, 1);
    padding: 0.5rem;

    .key {
        display: inline-block;
        box-shadow: 2px 2px 2px black;
        border-radius: 4px;
        background-color: white;
        opacity: 0.6;

        padding: 0.25rem;
        color: black;
        text-shadow: none;
        border: 4px outset;
    }
}

#help-trigger {
    outline: 1px solid rgba(255, 255, 255, 0.5);
    padding: 0 5px;

    &:hover {
        cursor: pointer;
        background-color: white;
    }

    @media screen and (pointer: coarse) {
        display: none;
    }
}

.bar {
    display: flex;
    flex: 1;
    justify-content: center;
    font-size: 0.25rem;
    align-items: center;
    align-content: center;

    .btn {
        height: 100%;
    }
}

.btn {
    flex: 1;
    box-shadow: var(--shadow);
    background: var(--bg-button);
    text-align: center;
    cursor: pointer;
    min-height: 60px;
    min-width: 60px;
    align-items: center;
    align-content: center;
    justify-content: center;

    &:first-child {
        border-radius: 2rem 0rem 0rem 2rem;
    }

    &:last-child {
        border-radius: 0rem 2rem 2rem 0rem;
    }

    &.disabled {
        box-shadow: inset 1px 1px 1px rgba(0, 0, 0, 0.5);
        pointer-events: none;
        color: rgba(255, 255, 255, 0.3);
    }

    &.selected {
        box-shadow: var(--of-shadow);
        background: var(--bg-button-active);
        color: var(--main-color);
        text-shadow: 0 0 5px var(--main-color);
    }

    &:active {
        color: var(--main-color);
    }

    &.selected.switchable:hover {
        box-shadow: var(--shadow);
        background-color: rgb(42, 42, 42);
    }

    &:not(.selected):hover {
        box-shadow: var(--of-shadow);
        background-color: rgb(42, 42, 42);
    }
}